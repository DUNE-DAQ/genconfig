
@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

find_dependency(oks)



# Figure out whether or not this dependency is an installed package or
# in repo form

if (EXISTS ${CMAKE_SOURCE_DIR}/@PROJECT_NAME@)

message(STATUS "Project \"@PROJECT_NAME@\" will be treated as repo (found in ${CMAKE_SOURCE_DIR}/@PROJECT_NAME@)")

get_filename_component(@PROJECT_NAME@_DAQSHARE "${CMAKE_CURRENT_LIST_FILE}" DIRECTORY)
set(GENCONFIG_BINARY "${CMAKE_BINARY_DIR}/genconfig/apps/genconfig" )
list(APPEND CMAKE_MODULE_PATH ${CMAKE_BINARY_DIR}/genconfig)

else()

message(STATUS "Project \"@PROJECT_NAME@\" will be treated as installed package (found in ${CMAKE_CURRENT_LIST_DIR})")

set(@PROJECT_NAME@_DAQSHARE "${CMAKE_CURRENT_LIST_DIR}/../../../share")

set(GENCONFIG_BINARY "${CMAKE_CURRENT_LIST_DIR}/../../../bin/genconfig")
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR})

set_and_check(targets_file ${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake)
include(${targets_file})

endif()

check_required_components(@PROJECT_NAME@)

include(genconfig)
